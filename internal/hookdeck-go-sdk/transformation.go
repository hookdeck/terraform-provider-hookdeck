// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	core "github.com/hookdeck/hookdeck-go-sdk/core"
	internal "github.com/hookdeck/hookdeck-go-sdk/internal"
	time "time"
)

type TransformationCreateRequest struct {
	// A unique, human-friendly name for the transformation
	Name string `json:"name" url:"-"`
	// JavaScript code to be executed as string
	Code string `json:"code" url:"-"`
	// Key-value environment variables to be passed to the transformation
	Env *core.Optional[map[string]string] `json:"env,omitempty" url:"-"`
}

type TransformationListRequest struct {
	Id      []*string                         `json:"-" url:"id,omitempty"`
	Name    *string                           `json:"-" url:"name,omitempty"`
	OrderBy *TransformationListRequestOrderBy `json:"-" url:"order_by,omitempty"`
	Dir     *TransformationListRequestDir     `json:"-" url:"dir,omitempty"`
	Limit   *int                              `json:"-" url:"limit,omitempty"`
	Next    *string                           `json:"-" url:"next,omitempty"`
	Prev    *string                           `json:"-" url:"prev,omitempty"`
}

type TransformationListExecutionRequest struct {
	LogLevel  *TransformationListExecutionRequestLogLevel `json:"-" url:"log_level,omitempty"`
	WebhookId []*string                                   `json:"-" url:"webhook_id,omitempty"`
	IssueId   []*string                                   `json:"-" url:"issue_id,omitempty"`
	CreatedAt *time.Time                                  `json:"-" url:"created_at,omitempty"`
	OrderBy   *TransformationListExecutionRequestOrderBy  `json:"-" url:"order_by,omitempty"`
	Dir       *TransformationListExecutionRequestDir      `json:"-" url:"dir,omitempty"`
	Limit     *int                                        `json:"-" url:"limit,omitempty"`
	Next      *string                                     `json:"-" url:"next,omitempty"`
	Prev      *string                                     `json:"-" url:"prev,omitempty"`
}

type TransformationRunRequest struct {
	// Key-value environment variables to be passed to the transformation
	Env *core.Optional[map[string]string] `json:"env,omitempty" url:"-"`
	// ID of the connection to use for the execution `context`
	WebhookId *core.Optional[string] `json:"webhook_id,omitempty" url:"-"`
	// JavaScript code to be executed
	Code *core.Optional[string] `json:"code,omitempty" url:"-"`
	// Transformation ID
	TransformationId *core.Optional[string] `json:"transformation_id,omitempty" url:"-"`
	// Request input to use for the transformation execution
	Request *core.Optional[TransformationRunRequestRequest] `json:"request,omitempty" url:"-"`
	EventId *core.Optional[string]                          `json:"event_id,omitempty" url:"-"`
}

type Transformation struct {
	// ID of the transformation
	Id string `json:"id" url:"id"`
	// ID of the project
	TeamId string `json:"team_id" url:"team_id"`
	// A unique, human-friendly name for the transformation
	Name string `json:"name" url:"name"`
	// JavaScript code to be executed
	Code         string  `json:"code" url:"code"`
	EncryptedEnv *string `json:"encrypted_env,omitempty" url:"encrypted_env,omitempty"`
	Iv           *string `json:"iv,omitempty" url:"iv,omitempty"`
	// Key-value environment variables to be passed to the transformation
	Env map[string]*string `json:"env,omitempty" url:"env,omitempty"`
	// Date the transformation was last updated
	UpdatedAt time.Time `json:"updated_at" url:"updated_at"`
	// Date the transformation was created
	CreatedAt time.Time `json:"created_at" url:"created_at"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (t *Transformation) GetId() string {
	if t == nil {
		return ""
	}
	return t.Id
}

func (t *Transformation) GetTeamId() string {
	if t == nil {
		return ""
	}
	return t.TeamId
}

func (t *Transformation) GetName() string {
	if t == nil {
		return ""
	}
	return t.Name
}

func (t *Transformation) GetCode() string {
	if t == nil {
		return ""
	}
	return t.Code
}

func (t *Transformation) GetEncryptedEnv() *string {
	if t == nil {
		return nil
	}
	return t.EncryptedEnv
}

func (t *Transformation) GetIv() *string {
	if t == nil {
		return nil
	}
	return t.Iv
}

func (t *Transformation) GetEnv() map[string]*string {
	if t == nil {
		return nil
	}
	return t.Env
}

func (t *Transformation) GetUpdatedAt() time.Time {
	if t == nil {
		return time.Time{}
	}
	return t.UpdatedAt
}

func (t *Transformation) GetCreatedAt() time.Time {
	if t == nil {
		return time.Time{}
	}
	return t.CreatedAt
}

func (t *Transformation) GetExtraProperties() map[string]interface{} {
	return t.extraProperties
}

func (t *Transformation) UnmarshalJSON(data []byte) error {
	type embed Transformation
	var unmarshaler = struct {
		embed
		UpdatedAt *internal.DateTime `json:"updated_at"`
		CreatedAt *internal.DateTime `json:"created_at"`
	}{
		embed: embed(*t),
	}
	if err := json.Unmarshal(data, &unmarshaler); err != nil {
		return err
	}
	*t = Transformation(unmarshaler.embed)
	t.UpdatedAt = unmarshaler.UpdatedAt.Time()
	t.CreatedAt = unmarshaler.CreatedAt.Time()
	extraProperties, err := internal.ExtractExtraProperties(data, *t)
	if err != nil {
		return err
	}
	t.extraProperties = extraProperties
	t.rawJSON = json.RawMessage(data)
	return nil
}

func (t *Transformation) MarshalJSON() ([]byte, error) {
	type embed Transformation
	var marshaler = struct {
		embed
		UpdatedAt *internal.DateTime `json:"updated_at"`
		CreatedAt *internal.DateTime `json:"created_at"`
	}{
		embed:     embed(*t),
		UpdatedAt: internal.NewDateTime(t.UpdatedAt),
		CreatedAt: internal.NewDateTime(t.CreatedAt),
	}
	return json.Marshal(marshaler)
}

func (t *Transformation) String() string {
	if len(t.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(t.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(t); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", t)
}

type TransformationExecutionPaginatedResult struct {
	Pagination *SeekPagination            `json:"pagination,omitempty" url:"pagination,omitempty"`
	Count      *int                       `json:"count,omitempty" url:"count,omitempty"`
	Models     []*TransformationExecution `json:"models,omitempty" url:"models,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (t *TransformationExecutionPaginatedResult) GetPagination() *SeekPagination {
	if t == nil {
		return nil
	}
	return t.Pagination
}

func (t *TransformationExecutionPaginatedResult) GetCount() *int {
	if t == nil {
		return nil
	}
	return t.Count
}

func (t *TransformationExecutionPaginatedResult) GetModels() []*TransformationExecution {
	if t == nil {
		return nil
	}
	return t.Models
}

func (t *TransformationExecutionPaginatedResult) GetExtraProperties() map[string]interface{} {
	return t.extraProperties
}

func (t *TransformationExecutionPaginatedResult) UnmarshalJSON(data []byte) error {
	type unmarshaler TransformationExecutionPaginatedResult
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*t = TransformationExecutionPaginatedResult(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *t)
	if err != nil {
		return err
	}
	t.extraProperties = extraProperties
	t.rawJSON = json.RawMessage(data)
	return nil
}

func (t *TransformationExecutionPaginatedResult) String() string {
	if len(t.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(t.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(t); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", t)
}

type TransformationExecutorOutput struct {
	RequestId        *string                              `json:"request_id,omitempty" url:"request_id,omitempty"`
	TransformationId *string                              `json:"transformation_id,omitempty" url:"transformation_id,omitempty"`
	ExecutionId      *string                              `json:"execution_id,omitempty" url:"execution_id,omitempty"`
	LogLevel         TransformationExecutionLogLevel      `json:"log_level" url:"log_level"`
	Request          *TransformationExecutorOutputRequest `json:"request,omitempty" url:"request,omitempty"`
	Console          []*ConsoleLine                       `json:"console,omitempty" url:"console,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (t *TransformationExecutorOutput) GetRequestId() *string {
	if t == nil {
		return nil
	}
	return t.RequestId
}

func (t *TransformationExecutorOutput) GetTransformationId() *string {
	if t == nil {
		return nil
	}
	return t.TransformationId
}

func (t *TransformationExecutorOutput) GetExecutionId() *string {
	if t == nil {
		return nil
	}
	return t.ExecutionId
}

func (t *TransformationExecutorOutput) GetLogLevel() TransformationExecutionLogLevel {
	if t == nil {
		return ""
	}
	return t.LogLevel
}

func (t *TransformationExecutorOutput) GetRequest() *TransformationExecutorOutputRequest {
	if t == nil {
		return nil
	}
	return t.Request
}

func (t *TransformationExecutorOutput) GetConsole() []*ConsoleLine {
	if t == nil {
		return nil
	}
	return t.Console
}

func (t *TransformationExecutorOutput) GetExtraProperties() map[string]interface{} {
	return t.extraProperties
}

func (t *TransformationExecutorOutput) UnmarshalJSON(data []byte) error {
	type unmarshaler TransformationExecutorOutput
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*t = TransformationExecutorOutput(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *t)
	if err != nil {
		return err
	}
	t.extraProperties = extraProperties
	t.rawJSON = json.RawMessage(data)
	return nil
}

func (t *TransformationExecutorOutput) String() string {
	if len(t.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(t.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(t); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", t)
}

type TransformationExecutorOutputRequest struct {
	Headers     *TransformationExecutorOutputRequestHeaders     `json:"headers,omitempty" url:"headers,omitempty"`
	Path        string                                          `json:"path" url:"path"`
	Query       *TransformationExecutorOutputRequestQuery       `json:"query,omitempty" url:"query,omitempty"`
	ParsedQuery *TransformationExecutorOutputRequestParsedQuery `json:"parsed_query,omitempty" url:"parsed_query,omitempty"`
	Body        *TransformationExecutorOutputRequestBody        `json:"body,omitempty" url:"body,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (t *TransformationExecutorOutputRequest) GetHeaders() *TransformationExecutorOutputRequestHeaders {
	if t == nil {
		return nil
	}
	return t.Headers
}

func (t *TransformationExecutorOutputRequest) GetPath() string {
	if t == nil {
		return ""
	}
	return t.Path
}

func (t *TransformationExecutorOutputRequest) GetQuery() *TransformationExecutorOutputRequestQuery {
	if t == nil {
		return nil
	}
	return t.Query
}

func (t *TransformationExecutorOutputRequest) GetParsedQuery() *TransformationExecutorOutputRequestParsedQuery {
	if t == nil {
		return nil
	}
	return t.ParsedQuery
}

func (t *TransformationExecutorOutputRequest) GetBody() *TransformationExecutorOutputRequestBody {
	if t == nil {
		return nil
	}
	return t.Body
}

func (t *TransformationExecutorOutputRequest) GetExtraProperties() map[string]interface{} {
	return t.extraProperties
}

func (t *TransformationExecutorOutputRequest) UnmarshalJSON(data []byte) error {
	type unmarshaler TransformationExecutorOutputRequest
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*t = TransformationExecutorOutputRequest(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *t)
	if err != nil {
		return err
	}
	t.extraProperties = extraProperties
	t.rawJSON = json.RawMessage(data)
	return nil
}

func (t *TransformationExecutorOutputRequest) String() string {
	if len(t.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(t.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(t); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", t)
}

type TransformationExecutorOutputRequestBody struct {
	StringOptional                             *string
	TransformationExecutorOutputRequestBodyOne *TransformationExecutorOutputRequestBodyOne

	typ string
}

func NewTransformationExecutorOutputRequestBodyFromStringOptional(value *string) *TransformationExecutorOutputRequestBody {
	return &TransformationExecutorOutputRequestBody{typ: "StringOptional", StringOptional: value}
}

func NewTransformationExecutorOutputRequestBodyFromTransformationExecutorOutputRequestBodyOne(value *TransformationExecutorOutputRequestBodyOne) *TransformationExecutorOutputRequestBody {
	return &TransformationExecutorOutputRequestBody{typ: "TransformationExecutorOutputRequestBodyOne", TransformationExecutorOutputRequestBodyOne: value}
}

func (t *TransformationExecutorOutputRequestBody) GetStringOptional() *string {
	if t == nil {
		return nil
	}
	return t.StringOptional
}

func (t *TransformationExecutorOutputRequestBody) GetTransformationExecutorOutputRequestBodyOne() *TransformationExecutorOutputRequestBodyOne {
	if t == nil {
		return nil
	}
	return t.TransformationExecutorOutputRequestBodyOne
}

func (t *TransformationExecutorOutputRequestBody) UnmarshalJSON(data []byte) error {
	var valueStringOptional *string
	if err := json.Unmarshal(data, &valueStringOptional); err == nil {
		t.typ = "StringOptional"
		t.StringOptional = valueStringOptional
		return nil
	}
	valueTransformationExecutorOutputRequestBodyOne := new(TransformationExecutorOutputRequestBodyOne)
	if err := json.Unmarshal(data, &valueTransformationExecutorOutputRequestBodyOne); err == nil {
		t.typ = "TransformationExecutorOutputRequestBodyOne"
		t.TransformationExecutorOutputRequestBodyOne = valueTransformationExecutorOutputRequestBodyOne
		return nil
	}
	return fmt.Errorf("%s cannot be deserialized as a %T", data, t)
}

func (t TransformationExecutorOutputRequestBody) MarshalJSON() ([]byte, error) {
	if t.typ == "StringOptional" || t.StringOptional != nil {
		return json.Marshal(t.StringOptional)
	}
	if t.typ == "TransformationExecutorOutputRequestBodyOne" || t.TransformationExecutorOutputRequestBodyOne != nil {
		return json.Marshal(t.TransformationExecutorOutputRequestBodyOne)
	}
	return nil, fmt.Errorf("type %T does not include a non-empty union type", t)
}

type TransformationExecutorOutputRequestBodyVisitor interface {
	VisitStringOptional(*string) error
	VisitTransformationExecutorOutputRequestBodyOne(*TransformationExecutorOutputRequestBodyOne) error
}

func (t *TransformationExecutorOutputRequestBody) Accept(visitor TransformationExecutorOutputRequestBodyVisitor) error {
	if t.typ == "StringOptional" || t.StringOptional != nil {
		return visitor.VisitStringOptional(t.StringOptional)
	}
	if t.typ == "TransformationExecutorOutputRequestBodyOne" || t.TransformationExecutorOutputRequestBodyOne != nil {
		return visitor.VisitTransformationExecutorOutputRequestBodyOne(t.TransformationExecutorOutputRequestBodyOne)
	}
	return fmt.Errorf("type %T does not include a non-empty union type", t)
}

type TransformationExecutorOutputRequestBodyOne struct {
	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (t *TransformationExecutorOutputRequestBodyOne) GetExtraProperties() map[string]interface{} {
	return t.extraProperties
}

func (t *TransformationExecutorOutputRequestBodyOne) UnmarshalJSON(data []byte) error {
	type unmarshaler TransformationExecutorOutputRequestBodyOne
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*t = TransformationExecutorOutputRequestBodyOne(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *t)
	if err != nil {
		return err
	}
	t.extraProperties = extraProperties
	t.rawJSON = json.RawMessage(data)
	return nil
}

func (t *TransformationExecutorOutputRequestBodyOne) String() string {
	if len(t.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(t.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(t); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", t)
}

type TransformationExecutorOutputRequestHeaders struct {
	String           string
	StringUnknownMap map[string]interface{}

	typ string
}

func NewTransformationExecutorOutputRequestHeadersFromString(value string) *TransformationExecutorOutputRequestHeaders {
	return &TransformationExecutorOutputRequestHeaders{typ: "String", String: value}
}

func NewTransformationExecutorOutputRequestHeadersFromStringUnknownMap(value map[string]interface{}) *TransformationExecutorOutputRequestHeaders {
	return &TransformationExecutorOutputRequestHeaders{typ: "StringUnknownMap", StringUnknownMap: value}
}

func (t *TransformationExecutorOutputRequestHeaders) GetString() string {
	if t == nil {
		return ""
	}
	return t.String
}

func (t *TransformationExecutorOutputRequestHeaders) GetStringUnknownMap() map[string]interface{} {
	if t == nil {
		return nil
	}
	return t.StringUnknownMap
}

func (t *TransformationExecutorOutputRequestHeaders) UnmarshalJSON(data []byte) error {
	var valueString string
	if err := json.Unmarshal(data, &valueString); err == nil {
		t.typ = "String"
		t.String = valueString
		return nil
	}
	var valueStringUnknownMap map[string]interface{}
	if err := json.Unmarshal(data, &valueStringUnknownMap); err == nil {
		t.typ = "StringUnknownMap"
		t.StringUnknownMap = valueStringUnknownMap
		return nil
	}
	return fmt.Errorf("%s cannot be deserialized as a %T", data, t)
}

func (t TransformationExecutorOutputRequestHeaders) MarshalJSON() ([]byte, error) {
	if t.typ == "String" || t.String != "" {
		return json.Marshal(t.String)
	}
	if t.typ == "StringUnknownMap" || t.StringUnknownMap != nil {
		return json.Marshal(t.StringUnknownMap)
	}
	return nil, fmt.Errorf("type %T does not include a non-empty union type", t)
}

type TransformationExecutorOutputRequestHeadersVisitor interface {
	VisitString(string) error
	VisitStringUnknownMap(map[string]interface{}) error
}

func (t *TransformationExecutorOutputRequestHeaders) Accept(visitor TransformationExecutorOutputRequestHeadersVisitor) error {
	if t.typ == "String" || t.String != "" {
		return visitor.VisitString(t.String)
	}
	if t.typ == "StringUnknownMap" || t.StringUnknownMap != nil {
		return visitor.VisitStringUnknownMap(t.StringUnknownMap)
	}
	return fmt.Errorf("type %T does not include a non-empty union type", t)
}

type TransformationExecutorOutputRequestParsedQuery struct {
	StringOptional                                    *string
	TransformationExecutorOutputRequestParsedQueryOne *TransformationExecutorOutputRequestParsedQueryOne

	typ string
}

func NewTransformationExecutorOutputRequestParsedQueryFromStringOptional(value *string) *TransformationExecutorOutputRequestParsedQuery {
	return &TransformationExecutorOutputRequestParsedQuery{typ: "StringOptional", StringOptional: value}
}

func NewTransformationExecutorOutputRequestParsedQueryFromTransformationExecutorOutputRequestParsedQueryOne(value *TransformationExecutorOutputRequestParsedQueryOne) *TransformationExecutorOutputRequestParsedQuery {
	return &TransformationExecutorOutputRequestParsedQuery{typ: "TransformationExecutorOutputRequestParsedQueryOne", TransformationExecutorOutputRequestParsedQueryOne: value}
}

func (t *TransformationExecutorOutputRequestParsedQuery) GetStringOptional() *string {
	if t == nil {
		return nil
	}
	return t.StringOptional
}

func (t *TransformationExecutorOutputRequestParsedQuery) GetTransformationExecutorOutputRequestParsedQueryOne() *TransformationExecutorOutputRequestParsedQueryOne {
	if t == nil {
		return nil
	}
	return t.TransformationExecutorOutputRequestParsedQueryOne
}

func (t *TransformationExecutorOutputRequestParsedQuery) UnmarshalJSON(data []byte) error {
	var valueStringOptional *string
	if err := json.Unmarshal(data, &valueStringOptional); err == nil {
		t.typ = "StringOptional"
		t.StringOptional = valueStringOptional
		return nil
	}
	valueTransformationExecutorOutputRequestParsedQueryOne := new(TransformationExecutorOutputRequestParsedQueryOne)
	if err := json.Unmarshal(data, &valueTransformationExecutorOutputRequestParsedQueryOne); err == nil {
		t.typ = "TransformationExecutorOutputRequestParsedQueryOne"
		t.TransformationExecutorOutputRequestParsedQueryOne = valueTransformationExecutorOutputRequestParsedQueryOne
		return nil
	}
	return fmt.Errorf("%s cannot be deserialized as a %T", data, t)
}

func (t TransformationExecutorOutputRequestParsedQuery) MarshalJSON() ([]byte, error) {
	if t.typ == "StringOptional" || t.StringOptional != nil {
		return json.Marshal(t.StringOptional)
	}
	if t.typ == "TransformationExecutorOutputRequestParsedQueryOne" || t.TransformationExecutorOutputRequestParsedQueryOne != nil {
		return json.Marshal(t.TransformationExecutorOutputRequestParsedQueryOne)
	}
	return nil, fmt.Errorf("type %T does not include a non-empty union type", t)
}

type TransformationExecutorOutputRequestParsedQueryVisitor interface {
	VisitStringOptional(*string) error
	VisitTransformationExecutorOutputRequestParsedQueryOne(*TransformationExecutorOutputRequestParsedQueryOne) error
}

func (t *TransformationExecutorOutputRequestParsedQuery) Accept(visitor TransformationExecutorOutputRequestParsedQueryVisitor) error {
	if t.typ == "StringOptional" || t.StringOptional != nil {
		return visitor.VisitStringOptional(t.StringOptional)
	}
	if t.typ == "TransformationExecutorOutputRequestParsedQueryOne" || t.TransformationExecutorOutputRequestParsedQueryOne != nil {
		return visitor.VisitTransformationExecutorOutputRequestParsedQueryOne(t.TransformationExecutorOutputRequestParsedQueryOne)
	}
	return fmt.Errorf("type %T does not include a non-empty union type", t)
}

type TransformationExecutorOutputRequestParsedQueryOne struct {
	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (t *TransformationExecutorOutputRequestParsedQueryOne) GetExtraProperties() map[string]interface{} {
	return t.extraProperties
}

func (t *TransformationExecutorOutputRequestParsedQueryOne) UnmarshalJSON(data []byte) error {
	type unmarshaler TransformationExecutorOutputRequestParsedQueryOne
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*t = TransformationExecutorOutputRequestParsedQueryOne(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *t)
	if err != nil {
		return err
	}
	t.extraProperties = extraProperties
	t.rawJSON = json.RawMessage(data)
	return nil
}

func (t *TransformationExecutorOutputRequestParsedQueryOne) String() string {
	if len(t.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(t.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(t); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", t)
}

type TransformationExecutorOutputRequestQuery struct {
	TransformationExecutorOutputRequestQueryZeroOptional *TransformationExecutorOutputRequestQueryZero
	String                                               string

	typ string
}

func NewTransformationExecutorOutputRequestQueryFromTransformationExecutorOutputRequestQueryZeroOptional(value *TransformationExecutorOutputRequestQueryZero) *TransformationExecutorOutputRequestQuery {
	return &TransformationExecutorOutputRequestQuery{typ: "TransformationExecutorOutputRequestQueryZeroOptional", TransformationExecutorOutputRequestQueryZeroOptional: value}
}

func NewTransformationExecutorOutputRequestQueryFromString(value string) *TransformationExecutorOutputRequestQuery {
	return &TransformationExecutorOutputRequestQuery{typ: "String", String: value}
}

func (t *TransformationExecutorOutputRequestQuery) GetTransformationExecutorOutputRequestQueryZeroOptional() *TransformationExecutorOutputRequestQueryZero {
	if t == nil {
		return nil
	}
	return t.TransformationExecutorOutputRequestQueryZeroOptional
}

func (t *TransformationExecutorOutputRequestQuery) GetString() string {
	if t == nil {
		return ""
	}
	return t.String
}

func (t *TransformationExecutorOutputRequestQuery) UnmarshalJSON(data []byte) error {
	var valueTransformationExecutorOutputRequestQueryZeroOptional *TransformationExecutorOutputRequestQueryZero
	if err := json.Unmarshal(data, &valueTransformationExecutorOutputRequestQueryZeroOptional); err == nil {
		t.typ = "TransformationExecutorOutputRequestQueryZeroOptional"
		t.TransformationExecutorOutputRequestQueryZeroOptional = valueTransformationExecutorOutputRequestQueryZeroOptional
		return nil
	}
	var valueString string
	if err := json.Unmarshal(data, &valueString); err == nil {
		t.typ = "String"
		t.String = valueString
		return nil
	}
	return fmt.Errorf("%s cannot be deserialized as a %T", data, t)
}

func (t TransformationExecutorOutputRequestQuery) MarshalJSON() ([]byte, error) {
	if t.typ == "TransformationExecutorOutputRequestQueryZeroOptional" || t.TransformationExecutorOutputRequestQueryZeroOptional != nil {
		return json.Marshal(t.TransformationExecutorOutputRequestQueryZeroOptional)
	}
	if t.typ == "String" || t.String != "" {
		return json.Marshal(t.String)
	}
	return nil, fmt.Errorf("type %T does not include a non-empty union type", t)
}

type TransformationExecutorOutputRequestQueryVisitor interface {
	VisitTransformationExecutorOutputRequestQueryZeroOptional(*TransformationExecutorOutputRequestQueryZero) error
	VisitString(string) error
}

func (t *TransformationExecutorOutputRequestQuery) Accept(visitor TransformationExecutorOutputRequestQueryVisitor) error {
	if t.typ == "TransformationExecutorOutputRequestQueryZeroOptional" || t.TransformationExecutorOutputRequestQueryZeroOptional != nil {
		return visitor.VisitTransformationExecutorOutputRequestQueryZeroOptional(t.TransformationExecutorOutputRequestQueryZeroOptional)
	}
	if t.typ == "String" || t.String != "" {
		return visitor.VisitString(t.String)
	}
	return fmt.Errorf("type %T does not include a non-empty union type", t)
}

type TransformationExecutorOutputRequestQueryZero struct {
	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (t *TransformationExecutorOutputRequestQueryZero) GetExtraProperties() map[string]interface{} {
	return t.extraProperties
}

func (t *TransformationExecutorOutputRequestQueryZero) UnmarshalJSON(data []byte) error {
	type unmarshaler TransformationExecutorOutputRequestQueryZero
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*t = TransformationExecutorOutputRequestQueryZero(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *t)
	if err != nil {
		return err
	}
	t.extraProperties = extraProperties
	t.rawJSON = json.RawMessage(data)
	return nil
}

func (t *TransformationExecutorOutputRequestQueryZero) String() string {
	if len(t.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(t.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(t); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", t)
}

type TransformationPaginatedResult struct {
	Pagination *SeekPagination   `json:"pagination,omitempty" url:"pagination,omitempty"`
	Count      *int              `json:"count,omitempty" url:"count,omitempty"`
	Models     []*Transformation `json:"models,omitempty" url:"models,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (t *TransformationPaginatedResult) GetPagination() *SeekPagination {
	if t == nil {
		return nil
	}
	return t.Pagination
}

func (t *TransformationPaginatedResult) GetCount() *int {
	if t == nil {
		return nil
	}
	return t.Count
}

func (t *TransformationPaginatedResult) GetModels() []*Transformation {
	if t == nil {
		return nil
	}
	return t.Models
}

func (t *TransformationPaginatedResult) GetExtraProperties() map[string]interface{} {
	return t.extraProperties
}

func (t *TransformationPaginatedResult) UnmarshalJSON(data []byte) error {
	type unmarshaler TransformationPaginatedResult
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*t = TransformationPaginatedResult(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *t)
	if err != nil {
		return err
	}
	t.extraProperties = extraProperties
	t.rawJSON = json.RawMessage(data)
	return nil
}

func (t *TransformationPaginatedResult) String() string {
	if len(t.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(t.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(t); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", t)
}

type TransformationDeleteResponse struct {
	// ID of the Transformation
	Id string `json:"id" url:"id"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (t *TransformationDeleteResponse) GetId() string {
	if t == nil {
		return ""
	}
	return t.Id
}

func (t *TransformationDeleteResponse) GetExtraProperties() map[string]interface{} {
	return t.extraProperties
}

func (t *TransformationDeleteResponse) UnmarshalJSON(data []byte) error {
	type unmarshaler TransformationDeleteResponse
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*t = TransformationDeleteResponse(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *t)
	if err != nil {
		return err
	}
	t.extraProperties = extraProperties
	t.rawJSON = json.RawMessage(data)
	return nil
}

func (t *TransformationDeleteResponse) String() string {
	if len(t.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(t.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(t); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", t)
}

type TransformationListExecutionRequestDir string

const (
	TransformationListExecutionRequestDirAsc  TransformationListExecutionRequestDir = "asc"
	TransformationListExecutionRequestDirDesc TransformationListExecutionRequestDir = "desc"
)

func NewTransformationListExecutionRequestDirFromString(s string) (TransformationListExecutionRequestDir, error) {
	switch s {
	case "asc":
		return TransformationListExecutionRequestDirAsc, nil
	case "desc":
		return TransformationListExecutionRequestDirDesc, nil
	}
	var t TransformationListExecutionRequestDir
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (t TransformationListExecutionRequestDir) Ptr() *TransformationListExecutionRequestDir {
	return &t
}

type TransformationListExecutionRequestLogLevel string

const (
	TransformationListExecutionRequestLogLevelDebug TransformationListExecutionRequestLogLevel = "debug"
	TransformationListExecutionRequestLogLevelInfo  TransformationListExecutionRequestLogLevel = "info"
	TransformationListExecutionRequestLogLevelWarn  TransformationListExecutionRequestLogLevel = "warn"
	TransformationListExecutionRequestLogLevelError TransformationListExecutionRequestLogLevel = "error"
	TransformationListExecutionRequestLogLevelFatal TransformationListExecutionRequestLogLevel = "fatal"
)

func NewTransformationListExecutionRequestLogLevelFromString(s string) (TransformationListExecutionRequestLogLevel, error) {
	switch s {
	case "debug":
		return TransformationListExecutionRequestLogLevelDebug, nil
	case "info":
		return TransformationListExecutionRequestLogLevelInfo, nil
	case "warn":
		return TransformationListExecutionRequestLogLevelWarn, nil
	case "error":
		return TransformationListExecutionRequestLogLevelError, nil
	case "fatal":
		return TransformationListExecutionRequestLogLevelFatal, nil
	}
	var t TransformationListExecutionRequestLogLevel
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (t TransformationListExecutionRequestLogLevel) Ptr() *TransformationListExecutionRequestLogLevel {
	return &t
}

type TransformationListExecutionRequestOrderBy string

const (
	TransformationListExecutionRequestOrderByCreatedAt TransformationListExecutionRequestOrderBy = "created_at"
)

func NewTransformationListExecutionRequestOrderByFromString(s string) (TransformationListExecutionRequestOrderBy, error) {
	switch s {
	case "created_at":
		return TransformationListExecutionRequestOrderByCreatedAt, nil
	}
	var t TransformationListExecutionRequestOrderBy
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (t TransformationListExecutionRequestOrderBy) Ptr() *TransformationListExecutionRequestOrderBy {
	return &t
}

type TransformationListRequestDir string

const (
	TransformationListRequestDirAsc  TransformationListRequestDir = "asc"
	TransformationListRequestDirDesc TransformationListRequestDir = "desc"
)

func NewTransformationListRequestDirFromString(s string) (TransformationListRequestDir, error) {
	switch s {
	case "asc":
		return TransformationListRequestDirAsc, nil
	case "desc":
		return TransformationListRequestDirDesc, nil
	}
	var t TransformationListRequestDir
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (t TransformationListRequestDir) Ptr() *TransformationListRequestDir {
	return &t
}

type TransformationListRequestOrderBy string

const (
	TransformationListRequestOrderByCreatedAt TransformationListRequestOrderBy = "created_at"
)

func NewTransformationListRequestOrderByFromString(s string) (TransformationListRequestOrderBy, error) {
	switch s {
	case "created_at":
		return TransformationListRequestOrderByCreatedAt, nil
	}
	var t TransformationListRequestOrderBy
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (t TransformationListRequestOrderBy) Ptr() *TransformationListRequestOrderBy {
	return &t
}

// Request input to use for the transformation execution
type TransformationRunRequestRequest struct {
	// Headers of the request
	Headers map[string]string `json:"headers,omitempty" url:"headers,omitempty"`
	// Body of the request
	Body *TransformationRunRequestRequestBody `json:"body,omitempty" url:"body,omitempty"`
	// Path of the request
	Path *string `json:"path,omitempty" url:"path,omitempty"`
	// String representation of the query params of the request
	Query *string `json:"query,omitempty" url:"query,omitempty"`
	// JSON representation of the query params
	ParsedQuery *TransformationRunRequestRequestParsedQuery `json:"parsed_query,omitempty" url:"parsed_query,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (t *TransformationRunRequestRequest) GetHeaders() map[string]string {
	if t == nil {
		return nil
	}
	return t.Headers
}

func (t *TransformationRunRequestRequest) GetBody() *TransformationRunRequestRequestBody {
	if t == nil {
		return nil
	}
	return t.Body
}

func (t *TransformationRunRequestRequest) GetPath() *string {
	if t == nil {
		return nil
	}
	return t.Path
}

func (t *TransformationRunRequestRequest) GetQuery() *string {
	if t == nil {
		return nil
	}
	return t.Query
}

func (t *TransformationRunRequestRequest) GetParsedQuery() *TransformationRunRequestRequestParsedQuery {
	if t == nil {
		return nil
	}
	return t.ParsedQuery
}

func (t *TransformationRunRequestRequest) GetExtraProperties() map[string]interface{} {
	return t.extraProperties
}

func (t *TransformationRunRequestRequest) UnmarshalJSON(data []byte) error {
	type unmarshaler TransformationRunRequestRequest
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*t = TransformationRunRequestRequest(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *t)
	if err != nil {
		return err
	}
	t.extraProperties = extraProperties
	t.rawJSON = json.RawMessage(data)
	return nil
}

func (t *TransformationRunRequestRequest) String() string {
	if len(t.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(t.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(t); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", t)
}

// Body of the request
type TransformationRunRequestRequestBody struct {
	TransformationRunRequestRequestBodyZero *TransformationRunRequestRequestBodyZero
	String                                  string

	typ string
}

func NewTransformationRunRequestRequestBodyFromTransformationRunRequestRequestBodyZero(value *TransformationRunRequestRequestBodyZero) *TransformationRunRequestRequestBody {
	return &TransformationRunRequestRequestBody{typ: "TransformationRunRequestRequestBodyZero", TransformationRunRequestRequestBodyZero: value}
}

func NewTransformationRunRequestRequestBodyFromString(value string) *TransformationRunRequestRequestBody {
	return &TransformationRunRequestRequestBody{typ: "String", String: value}
}

func (t *TransformationRunRequestRequestBody) GetTransformationRunRequestRequestBodyZero() *TransformationRunRequestRequestBodyZero {
	if t == nil {
		return nil
	}
	return t.TransformationRunRequestRequestBodyZero
}

func (t *TransformationRunRequestRequestBody) GetString() string {
	if t == nil {
		return ""
	}
	return t.String
}

func (t *TransformationRunRequestRequestBody) UnmarshalJSON(data []byte) error {
	valueTransformationRunRequestRequestBodyZero := new(TransformationRunRequestRequestBodyZero)
	if err := json.Unmarshal(data, &valueTransformationRunRequestRequestBodyZero); err == nil {
		t.typ = "TransformationRunRequestRequestBodyZero"
		t.TransformationRunRequestRequestBodyZero = valueTransformationRunRequestRequestBodyZero
		return nil
	}
	var valueString string
	if err := json.Unmarshal(data, &valueString); err == nil {
		t.typ = "String"
		t.String = valueString
		return nil
	}
	return fmt.Errorf("%s cannot be deserialized as a %T", data, t)
}

func (t TransformationRunRequestRequestBody) MarshalJSON() ([]byte, error) {
	if t.typ == "TransformationRunRequestRequestBodyZero" || t.TransformationRunRequestRequestBodyZero != nil {
		return json.Marshal(t.TransformationRunRequestRequestBodyZero)
	}
	if t.typ == "String" || t.String != "" {
		return json.Marshal(t.String)
	}
	return nil, fmt.Errorf("type %T does not include a non-empty union type", t)
}

type TransformationRunRequestRequestBodyVisitor interface {
	VisitTransformationRunRequestRequestBodyZero(*TransformationRunRequestRequestBodyZero) error
	VisitString(string) error
}

func (t *TransformationRunRequestRequestBody) Accept(visitor TransformationRunRequestRequestBodyVisitor) error {
	if t.typ == "TransformationRunRequestRequestBodyZero" || t.TransformationRunRequestRequestBodyZero != nil {
		return visitor.VisitTransformationRunRequestRequestBodyZero(t.TransformationRunRequestRequestBodyZero)
	}
	if t.typ == "String" || t.String != "" {
		return visitor.VisitString(t.String)
	}
	return fmt.Errorf("type %T does not include a non-empty union type", t)
}

type TransformationRunRequestRequestBodyZero struct {
	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (t *TransformationRunRequestRequestBodyZero) GetExtraProperties() map[string]interface{} {
	return t.extraProperties
}

func (t *TransformationRunRequestRequestBodyZero) UnmarshalJSON(data []byte) error {
	type unmarshaler TransformationRunRequestRequestBodyZero
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*t = TransformationRunRequestRequestBodyZero(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *t)
	if err != nil {
		return err
	}
	t.extraProperties = extraProperties
	t.rawJSON = json.RawMessage(data)
	return nil
}

func (t *TransformationRunRequestRequestBodyZero) String() string {
	if len(t.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(t.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(t); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", t)
}

// JSON representation of the query params
type TransformationRunRequestRequestParsedQuery struct {
	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (t *TransformationRunRequestRequestParsedQuery) GetExtraProperties() map[string]interface{} {
	return t.extraProperties
}

func (t *TransformationRunRequestRequestParsedQuery) UnmarshalJSON(data []byte) error {
	type unmarshaler TransformationRunRequestRequestParsedQuery
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*t = TransformationRunRequestRequestParsedQuery(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *t)
	if err != nil {
		return err
	}
	t.extraProperties = extraProperties
	t.rawJSON = json.RawMessage(data)
	return nil
}

func (t *TransformationRunRequestRequestParsedQuery) String() string {
	if len(t.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(t.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(t); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", t)
}

type TransformationUpdateRequest struct {
	// A unique, human-friendly name for the transformation
	Name *core.Optional[string] `json:"name,omitempty" url:"-"`
	// JavaScript code to be executed
	Code *core.Optional[string] `json:"code,omitempty" url:"-"`
	// Key-value environment variables to be passed to the transformation
	Env *core.Optional[map[string]string] `json:"env,omitempty" url:"-"`
}

type TransformationUpsertRequest struct {
	// A unique, human-friendly name for the transformation
	Name string `json:"name" url:"-"`
	// JavaScript code to be executed as string
	Code string `json:"code" url:"-"`
	// Key-value environment variables to be passed to the transformation
	Env *core.Optional[map[string]string] `json:"env,omitempty" url:"-"`
}
