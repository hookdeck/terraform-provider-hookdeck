// This file was auto-generated by Fern from our API Definition.

package api

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/hookdeck/hookdeck-go-sdk/internal"
)

type AddCustomHostname struct {
	// The custom hostname to attach to the project
	Hostname string `json:"hostname" url:"hostname"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (a *AddCustomHostname) GetHostname() string {
	if a == nil {
		return ""
	}
	return a.Hostname
}

func (a *AddCustomHostname) GetExtraProperties() map[string]interface{} {
	return a.extraProperties
}

func (a *AddCustomHostname) UnmarshalJSON(data []byte) error {
	type unmarshaler AddCustomHostname
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*a = AddCustomHostname(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *a)
	if err != nil {
		return err
	}
	a.extraProperties = extraProperties
	a.rawJSON = json.RawMessage(data)
	return nil
}

func (a *AddCustomHostname) String() string {
	if len(a.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(a.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(a); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", a)
}

type DeleteCustomDomainSchema struct {
	// The custom hostname ID
	Id string `json:"id" url:"id"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (d *DeleteCustomDomainSchema) GetId() string {
	if d == nil {
		return ""
	}
	return d.Id
}

func (d *DeleteCustomDomainSchema) GetExtraProperties() map[string]interface{} {
	return d.extraProperties
}

func (d *DeleteCustomDomainSchema) UnmarshalJSON(data []byte) error {
	type unmarshaler DeleteCustomDomainSchema
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*d = DeleteCustomDomainSchema(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *d)
	if err != nil {
		return err
	}
	d.extraProperties = extraProperties
	d.rawJSON = json.RawMessage(data)
	return nil
}

func (d *DeleteCustomDomainSchema) String() string {
	if len(d.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(d.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(d); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", d)
}

type ListCustomDomainSchema = []*ListCustomDomainSchemaItem

type ListCustomDomainSchemaItem struct {
	Id                    *string                                          `json:"id,omitempty" url:"id,omitempty"`
	Hostname              *string                                          `json:"hostname,omitempty" url:"hostname,omitempty"`
	Status                *string                                          `json:"status,omitempty" url:"status,omitempty"`
	Ssl                   *ListCustomDomainSchemaItemSsl                   `json:"ssl,omitempty" url:"ssl,omitempty"`
	VerificationErrors    []string                                         `json:"verification_errors,omitempty" url:"verification_errors,omitempty"`
	OwnershipVerification *ListCustomDomainSchemaItemOwnershipVerification `json:"ownership_verification,omitempty" url:"ownership_verification,omitempty"`
	CreatedAt             *string                                          `json:"created_at,omitempty" url:"created_at,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (l *ListCustomDomainSchemaItem) GetId() *string {
	if l == nil {
		return nil
	}
	return l.Id
}

func (l *ListCustomDomainSchemaItem) GetHostname() *string {
	if l == nil {
		return nil
	}
	return l.Hostname
}

func (l *ListCustomDomainSchemaItem) GetStatus() *string {
	if l == nil {
		return nil
	}
	return l.Status
}

func (l *ListCustomDomainSchemaItem) GetSsl() *ListCustomDomainSchemaItemSsl {
	if l == nil {
		return nil
	}
	return l.Ssl
}

func (l *ListCustomDomainSchemaItem) GetVerificationErrors() []string {
	if l == nil {
		return nil
	}
	return l.VerificationErrors
}

func (l *ListCustomDomainSchemaItem) GetOwnershipVerification() *ListCustomDomainSchemaItemOwnershipVerification {
	if l == nil {
		return nil
	}
	return l.OwnershipVerification
}

func (l *ListCustomDomainSchemaItem) GetCreatedAt() *string {
	if l == nil {
		return nil
	}
	return l.CreatedAt
}

func (l *ListCustomDomainSchemaItem) GetExtraProperties() map[string]interface{} {
	return l.extraProperties
}

func (l *ListCustomDomainSchemaItem) UnmarshalJSON(data []byte) error {
	type unmarshaler ListCustomDomainSchemaItem
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*l = ListCustomDomainSchemaItem(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *l)
	if err != nil {
		return err
	}
	l.extraProperties = extraProperties
	l.rawJSON = json.RawMessage(data)
	return nil
}

func (l *ListCustomDomainSchemaItem) String() string {
	if len(l.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(l.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(l); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", l)
}

type ListCustomDomainSchemaItemOwnershipVerification struct {
	Type  *string `json:"type,omitempty" url:"type,omitempty"`
	Name  *string `json:"name,omitempty" url:"name,omitempty"`
	Value *string `json:"value,omitempty" url:"value,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (l *ListCustomDomainSchemaItemOwnershipVerification) GetType() *string {
	if l == nil {
		return nil
	}
	return l.Type
}

func (l *ListCustomDomainSchemaItemOwnershipVerification) GetName() *string {
	if l == nil {
		return nil
	}
	return l.Name
}

func (l *ListCustomDomainSchemaItemOwnershipVerification) GetValue() *string {
	if l == nil {
		return nil
	}
	return l.Value
}

func (l *ListCustomDomainSchemaItemOwnershipVerification) GetExtraProperties() map[string]interface{} {
	return l.extraProperties
}

func (l *ListCustomDomainSchemaItemOwnershipVerification) UnmarshalJSON(data []byte) error {
	type unmarshaler ListCustomDomainSchemaItemOwnershipVerification
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*l = ListCustomDomainSchemaItemOwnershipVerification(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *l)
	if err != nil {
		return err
	}
	l.extraProperties = extraProperties
	l.rawJSON = json.RawMessage(data)
	return nil
}

func (l *ListCustomDomainSchemaItemOwnershipVerification) String() string {
	if len(l.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(l.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(l); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", l)
}

type ListCustomDomainSchemaItemSsl struct {
	Id                   *string                                                  `json:"id,omitempty" url:"id,omitempty"`
	Type                 *string                                                  `json:"type,omitempty" url:"type,omitempty"`
	Method               *string                                                  `json:"method,omitempty" url:"method,omitempty"`
	Status               *string                                                  `json:"status,omitempty" url:"status,omitempty"`
	TxtName              *string                                                  `json:"txt_name,omitempty" url:"txt_name,omitempty"`
	TxtValue             *string                                                  `json:"txt_value,omitempty" url:"txt_value,omitempty"`
	ValidationRecords    []*ListCustomDomainSchemaItemSslValidationRecordsItem    `json:"validation_records,omitempty" url:"validation_records,omitempty"`
	DcvDelegationRecords []*ListCustomDomainSchemaItemSslDcvDelegationRecordsItem `json:"dcv_delegation_records,omitempty" url:"dcv_delegation_records,omitempty"`
	Settings             *ListCustomDomainSchemaItemSslSettings                   `json:"settings,omitempty" url:"settings,omitempty"`
	BundleMethod         *string                                                  `json:"bundle_method,omitempty" url:"bundle_method,omitempty"`
	Wildcard             *bool                                                    `json:"wildcard,omitempty" url:"wildcard,omitempty"`
	CertificateAuthority *string                                                  `json:"certificate_authority,omitempty" url:"certificate_authority,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (l *ListCustomDomainSchemaItemSsl) GetId() *string {
	if l == nil {
		return nil
	}
	return l.Id
}

func (l *ListCustomDomainSchemaItemSsl) GetType() *string {
	if l == nil {
		return nil
	}
	return l.Type
}

func (l *ListCustomDomainSchemaItemSsl) GetMethod() *string {
	if l == nil {
		return nil
	}
	return l.Method
}

func (l *ListCustomDomainSchemaItemSsl) GetStatus() *string {
	if l == nil {
		return nil
	}
	return l.Status
}

func (l *ListCustomDomainSchemaItemSsl) GetTxtName() *string {
	if l == nil {
		return nil
	}
	return l.TxtName
}

func (l *ListCustomDomainSchemaItemSsl) GetTxtValue() *string {
	if l == nil {
		return nil
	}
	return l.TxtValue
}

func (l *ListCustomDomainSchemaItemSsl) GetValidationRecords() []*ListCustomDomainSchemaItemSslValidationRecordsItem {
	if l == nil {
		return nil
	}
	return l.ValidationRecords
}

func (l *ListCustomDomainSchemaItemSsl) GetDcvDelegationRecords() []*ListCustomDomainSchemaItemSslDcvDelegationRecordsItem {
	if l == nil {
		return nil
	}
	return l.DcvDelegationRecords
}

func (l *ListCustomDomainSchemaItemSsl) GetSettings() *ListCustomDomainSchemaItemSslSettings {
	if l == nil {
		return nil
	}
	return l.Settings
}

func (l *ListCustomDomainSchemaItemSsl) GetBundleMethod() *string {
	if l == nil {
		return nil
	}
	return l.BundleMethod
}

func (l *ListCustomDomainSchemaItemSsl) GetWildcard() *bool {
	if l == nil {
		return nil
	}
	return l.Wildcard
}

func (l *ListCustomDomainSchemaItemSsl) GetCertificateAuthority() *string {
	if l == nil {
		return nil
	}
	return l.CertificateAuthority
}

func (l *ListCustomDomainSchemaItemSsl) GetExtraProperties() map[string]interface{} {
	return l.extraProperties
}

func (l *ListCustomDomainSchemaItemSsl) UnmarshalJSON(data []byte) error {
	type unmarshaler ListCustomDomainSchemaItemSsl
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*l = ListCustomDomainSchemaItemSsl(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *l)
	if err != nil {
		return err
	}
	l.extraProperties = extraProperties
	l.rawJSON = json.RawMessage(data)
	return nil
}

func (l *ListCustomDomainSchemaItemSsl) String() string {
	if len(l.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(l.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(l); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", l)
}

type ListCustomDomainSchemaItemSslDcvDelegationRecordsItem struct {
	Cname       *string `json:"cname,omitempty" url:"cname,omitempty"`
	CnameTarget *string `json:"cname_target,omitempty" url:"cname_target,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (l *ListCustomDomainSchemaItemSslDcvDelegationRecordsItem) GetCname() *string {
	if l == nil {
		return nil
	}
	return l.Cname
}

func (l *ListCustomDomainSchemaItemSslDcvDelegationRecordsItem) GetCnameTarget() *string {
	if l == nil {
		return nil
	}
	return l.CnameTarget
}

func (l *ListCustomDomainSchemaItemSslDcvDelegationRecordsItem) GetExtraProperties() map[string]interface{} {
	return l.extraProperties
}

func (l *ListCustomDomainSchemaItemSslDcvDelegationRecordsItem) UnmarshalJSON(data []byte) error {
	type unmarshaler ListCustomDomainSchemaItemSslDcvDelegationRecordsItem
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*l = ListCustomDomainSchemaItemSslDcvDelegationRecordsItem(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *l)
	if err != nil {
		return err
	}
	l.extraProperties = extraProperties
	l.rawJSON = json.RawMessage(data)
	return nil
}

func (l *ListCustomDomainSchemaItemSslDcvDelegationRecordsItem) String() string {
	if len(l.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(l.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(l); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", l)
}

type ListCustomDomainSchemaItemSslSettings struct {
	MinTlsVersion *string `json:"min_tls_version,omitempty" url:"min_tls_version,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (l *ListCustomDomainSchemaItemSslSettings) GetMinTlsVersion() *string {
	if l == nil {
		return nil
	}
	return l.MinTlsVersion
}

func (l *ListCustomDomainSchemaItemSslSettings) GetExtraProperties() map[string]interface{} {
	return l.extraProperties
}

func (l *ListCustomDomainSchemaItemSslSettings) UnmarshalJSON(data []byte) error {
	type unmarshaler ListCustomDomainSchemaItemSslSettings
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*l = ListCustomDomainSchemaItemSslSettings(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *l)
	if err != nil {
		return err
	}
	l.extraProperties = extraProperties
	l.rawJSON = json.RawMessage(data)
	return nil
}

func (l *ListCustomDomainSchemaItemSslSettings) String() string {
	if len(l.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(l.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(l); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", l)
}

type ListCustomDomainSchemaItemSslValidationRecordsItem struct {
	Status   *string `json:"status,omitempty" url:"status,omitempty"`
	TxtName  *string `json:"txt_name,omitempty" url:"txt_name,omitempty"`
	TxtValue *string `json:"txt_value,omitempty" url:"txt_value,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (l *ListCustomDomainSchemaItemSslValidationRecordsItem) GetStatus() *string {
	if l == nil {
		return nil
	}
	return l.Status
}

func (l *ListCustomDomainSchemaItemSslValidationRecordsItem) GetTxtName() *string {
	if l == nil {
		return nil
	}
	return l.TxtName
}

func (l *ListCustomDomainSchemaItemSslValidationRecordsItem) GetTxtValue() *string {
	if l == nil {
		return nil
	}
	return l.TxtValue
}

func (l *ListCustomDomainSchemaItemSslValidationRecordsItem) GetExtraProperties() map[string]interface{} {
	return l.extraProperties
}

func (l *ListCustomDomainSchemaItemSslValidationRecordsItem) UnmarshalJSON(data []byte) error {
	type unmarshaler ListCustomDomainSchemaItemSslValidationRecordsItem
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*l = ListCustomDomainSchemaItemSslValidationRecordsItem(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *l)
	if err != nil {
		return err
	}
	l.extraProperties = extraProperties
	l.rawJSON = json.RawMessage(data)
	return nil
}

func (l *ListCustomDomainSchemaItemSslValidationRecordsItem) String() string {
	if len(l.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(l.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(l); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", l)
}
