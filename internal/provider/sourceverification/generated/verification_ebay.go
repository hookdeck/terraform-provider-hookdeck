// Code generated by cmd/codegen. DO NOT EDIT.
// This file is automatically generated and any changes will be overwritten.
// To regenerate this file, run `go generate`.

package generated

import (
	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	hookdeck "github.com/hookdeck/hookdeck-go-sdk"
)

type ebaySourceVerification struct {
	ClientId          types.String `tfsdk:"client_id"`
	ClientSecret      types.String `tfsdk:"client_secret"`
	DevId             types.String `tfsdk:"dev_id"`
	Environment       types.String `tfsdk:"environment"`
	VerificationToken types.String `tfsdk:"verification_token"`
}

type ebaySourceVerificationProvider struct {
}

func (p *ebaySourceVerificationProvider) getSchemaName() string {
	return "ebay"
}

func (p *ebaySourceVerificationProvider) getSchemaValue() schema.SingleNestedAttribute {
	return schema.SingleNestedAttribute{
		Optional: true,
		Attributes: map[string]schema.Attribute{
			"client_id": schema.StringAttribute{
				Required:  true,
				Optional:  false,
				Sensitive: true,
			},
			"client_secret": schema.StringAttribute{
				Required:  true,
				Optional:  false,
				Sensitive: true,
			},
			"dev_id": schema.StringAttribute{
				Required:  true,
				Optional:  false,
				Sensitive: true,
			},
			"environment": schema.StringAttribute{
				Required:  true,
				Optional:  false,
				Sensitive: true,
			},
			"verification_token": schema.StringAttribute{
				Required:  true,
				Optional:  false,
				Sensitive: true,
			},
		},
	}
}

func (p *ebaySourceVerificationProvider) ToPayload(sourceVerification *SourceVerification) *hookdeck.VerificationConfig {
	if sourceVerification.Ebay == nil {
		return nil
	}
	return hookdeck.NewVerificationConfigFromEbay(&hookdeck.VerificationEbay{
		Configs: &hookdeck.VerificationEbayConfigs{
			ClientId:          sourceVerification.Ebay.ClientId.ValueString(),
			ClientSecret:      sourceVerification.Ebay.ClientSecret.ValueString(),
			DevId:             sourceVerification.Ebay.DevId.ValueString(),
			Environment:       sourceVerification.Ebay.Environment.ValueString(),
			VerificationToken: sourceVerification.Ebay.VerificationToken.ValueString(),
		},
	})
}

func init() {
	Providers = append(Providers, &ebaySourceVerificationProvider{})
}
